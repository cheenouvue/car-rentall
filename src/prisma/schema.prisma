// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//model
model Users {
  id        String   @id @default(uuid())
  firstName String
  lastName  String
  email     String   @unique
  password  String
  profile   String?
  statu     Statu    @default(normal)
  role      Role     @default(user)
  createAt  DateTime @default(now())
  updateAt  DateTime @updatedAt
}

// enum
// enum users
enum Role {
  user
  admin
  superAdmin
}

enum Statu {
  ban
  normal
}

model CarType {
  car_type_id String   @id @default(uuid())
  name        String
  icon        String
  car         Car[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// Table Insurance
model Insurance {
  insurance_id String   @id @default(uuid())
  name         String
  icon         String
  car          Car[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

// Table Bank
model Bank {
  bank_id   String   @id @default(uuid())
  name      String
  icon      String
  car       Car[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Table Car
model Car {
  car_id       String    @id @default(uuid())
  name         String
  image        String
  year         String
  plate_city   String
  plate_text   String
  plate_number String
  gps          String
  car_seat     String
  car_gear     String
  color        String
  status       String
  price        Float
  carType      CarType   @relation(fields: [carTypeId], references: [car_type_id],onDelete: Cascade)
  carTypeId    String
  insurance    Insurance @relation(fields: [insuranceId], references: [insurance_id],onDelete: Cascade)
  insuranceId  String
  bank         Bank      @relation(fields: [bankId], references: [bank_id],onDelete: Cascade)
  bankId      String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}
