// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//model
model Users {
  id        String   @id @default(uuid())
  firstName String
  lastName  String
  email     String   @unique
  password  String
  profile   String?
  car       Rental[]
  statu     Statu    @default(normal)
  role      Role     @default(user)
  createAt  DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model Employees {
  id            String      @id @default(uuid())
  dept_id       String
  firstName     String
  lastName      String
  email         String      @unique
  phone         Int         @unique
  village       String
  distrit       String
  provinced     String
  natinalIdCard String      @unique
  salary        Float
  birthday      DateTime
  createAt      DateTime    @default(now())
  updateAt      DateTime    @updatedAt
  department    Departments @relation(fields: [dept_id], references: [id])
  rental        Rental[]
  review        Review[]
}

model Departments {
  id          String      @id @default(uuid())
  deptName    String      @unique
  pricePerDay String?
  createAt    DateTime    @default(now())
  updateAt    DateTime    @updatedAt
  Employees   Employees[]
}

// enum
// enum users
enum Role {
  user
  admin
  superAdmin
}

enum Statu {
  ban
  normal
}

model CarType {
  id        String   @id @default(uuid())
  name      String
  icon      String
  car       Car[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Table Insurance
model Insurance {
  id        String   @id @default(uuid())
  name      String
  icon      String
  car       Car[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Table Bank
model Bank {
  id        String   @id @default(uuid())
  name      String
  icon      String
  image     String
  rental    Rental[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Table Car
model Car {
  id           String    @id @default(uuid())
  name         String
  image        String
  year         String
  plate_city   String
  plate_text   String
  plate_number String
  gps          String
  car_seat     String
  car_gear     String
  color        String
  status       String
  price        Float
  carTypeId    String
  insuranceId  String
  carType      CarType   @relation(fields: [carTypeId], references: [id])
  insurance    Insurance @relation(fields: [insuranceId], references: [id])
  rental       Rental[]
  review       Review[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Review {
  id         String    @id @default(uuid())
  comment    String
  carPoint   Int
  emplyPoint Int
  emplyId    String
  carId      String
  rentalId   String    @unique
  rental     Rental    @relation(fields: [rentalId], references: [id], onDelete: Cascade)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  emply      Employees @relation(fields: [emplyId], references: [id])
  car        Car       @relation(fields: [carId], references: [id])
}

model payment {
  id        String   @id @default(uuid())
  price     Float
  image     String
  rentalId  String   @unique
  rental    Rental   @relation(fields: [rentalId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Repair {
  id           String   @id @default(uuid())
  penaltyImg   String
  penaltyTail  String
  penaltyPrice Float
  image        String
  detail       String
  pay          Float
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}



model Rental {
  id String @id @default(uuid())
  // promotion_id   String   @unique
  // status_id      String   @unique
  // coupon_id      String   @unique

  first_name    String
  last_name     String
  phone         Int
  passport      String //image
  identity_card String //image
  dri_icenes    String //image
  pay_image     String //image
  booking_pay   Float
  usersId       String
  carId         String
  employeesId   String
  bankId        String
  users         Users     @relation(fields: [usersId], references: [id])
  car           Car       @relation(fields: [carId], references: [id])
  bank          Bank      @relation(fields: [bankId], references: [id])
  Employees     Employees @relation(fields: [employeesId], references: [id])
  review        Review?   @relation
  payment       payment?  @relation

  creatDat  DateTime @default(now())
  updateDat DateTime @updatedAt
}

