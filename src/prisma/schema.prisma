// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//model
model Users {
  id        String    @id @default(uuid())
  firstName String
  lastName  String
  email     String    @unique
  password  String
  profile   String?
  role      Role      @default(user)
  otp       Json?
  createAt  DateTime  @default(now())
  updateAt  DateTime  @updatedAt
  coupon    Coupons[]
}

model Employees {
  id            String      @id @default(uuid())
  dept_id       String
  firstName     String
  lastName      String
  email         String      @unique
  phone         Int         @unique
  village       String
  distrit       String
  provinced     String
  natinalIdCard String      @unique
  salary        Float
  birthday      DateTime
  createAt      DateTime    @default(now())
  updateAt      DateTime    @updatedAt
  department    Departments @relation(fields: [dept_id], references: [id])
}

model Departments {
  id          String      @id @default(uuid())
  deptName    String      @unique
  pricePerDay String?
  createAt    DateTime    @default(now())
  updateAt    DateTime    @updatedAt
  Employees   Employees[]
}

model Status {
  id          String   @id @default(uuid())
  statu       Int      @unique
  statu_user  String   @unique
  statu_admin String   @unique
  statu_car   String   @unique
  icon_statu  String   @unique
  createAt    DateTime @default(now())
  updateAt    DateTime @updatedAt
}

model Promotions {
  id              String          @id @default(uuid())
  titel           String
  description     String
  image           String
  discount_type   Discount_Type
  discount        Float
  min_rent_amount Float
  status          Statu_Promotion @default(active)
  start_date      DateTime
  end_date        DateTime
  createAt        DateTime        @default(now())
  updateAt        DateTime        @updatedAt
}

model Coupons {
  id          String          @id @default(uuid())
  user_id     String
  code        String          @unique
  description String
  discount    Float
  status      Statu_Promotion @default(active)
  start_date  DateTime
  end_date    DateTime
  createAt    DateTime        @default(now())
  updateAt    DateTime        @updatedAt
  user        Users           @relation(fields: [user_id], references: [id])
}

// model CarType {
//   car_type_id String   @id @default(uuid())
//   name        String
//   icon        String
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @default(now())
//   car        Car[]    @relation("CarTypeToCar") // A CarType can be linked to multiple Cars
// }

// // Table Insurance
// model Insurance {
//   insurance_id String   @id @default(uuid())
//   name         String
//   icon         String
//   createdAt    DateTime @default(now())
//   updatedAt    DateTime @default(now())
//   car         Car[]    @relation("InsuranceToCar") // An Insurance can be linked to multiple Cars
// }

// // Table Bank
// model Bank {
//   bank_id   String   @id @default(uuid())
//   name      String
//   icon      String
//   createdAt DateTime @default(now())
//   updatedAt DateTime @default(now())
// }

// // Table Car
// model Car {
//   car_id       String      @id @default(uuid())
//   name         String
//   image        String
//   car_type     CarType[]   @relation("CarTypeToCar") // Each car can have multiple CarTypes
//   insurance    Insurance[] @relation("InsuranceToCar") // Each car can have multiple Insurances
//   year         String
//   plate_city   String
//   plate_text   String
//   plate_number String
//   gps          String
//   car_seat     String
//   car_gear     String
//   color        String
//   status       String
//   price        Float
//   createdAt    DateTime    @default(now())
//   updatedAt    DateTime    @default(now())
// }

// enum
// enum users
enum Role {
  user
  admin
  superAdmin
}

enum Statu_Promotion {
  active
  inactive
  expired
}

enum Discount_Type {
  percent
  currency
}
